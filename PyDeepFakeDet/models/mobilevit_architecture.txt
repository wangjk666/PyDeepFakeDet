MobileViT(
  (conv_1): ConvLayer(
    (block): Sequential(
      (conv): Conv2d(3, 16, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)
      (norm): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU()
    )
  )
  (layer_1): Sequential(
    (0): InvertedResidual(
      (block): Sequential(
        (exp_1x1): ConvLayer(
          (block): Sequential(
            (conv): Conv2d(16, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU()
          )
        )
        (conv_3x3): ConvLayer(
          (block): Sequential(
            (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=32, bias=False)
            (norm): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU()
          )
        )
        (red_1x1): ConvLayer(
          (block): Sequential(
            (conv): Conv2d(32, 16, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (layer_2): Sequential(
    (0): InvertedResidual(
      (block): Sequential(
        (exp_1x1): ConvLayer(
          (block): Sequential(
            (conv): Conv2d(16, 32, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU()
          )
        )
        (conv_3x3): ConvLayer(
          (block): Sequential(
            (conv): Conv2d(32, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=32, bias=False)
            (norm): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU()
          )
        )
        (red_1x1): ConvLayer(
          (block): Sequential(
            (conv): Conv2d(32, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): InvertedResidual(
      (block): Sequential(
        (exp_1x1): ConvLayer(
          (block): Sequential(
            (conv): Conv2d(24, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU()
          )
        )
        (conv_3x3): ConvLayer(
          (block): Sequential(
            (conv): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=48, bias=False)
            (norm): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU()
          )
        )
        (red_1x1): ConvLayer(
          (block): Sequential(
            (conv): Conv2d(48, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (2): InvertedResidual(
      (block): Sequential(
        (exp_1x1): ConvLayer(
          (block): Sequential(
            (conv): Conv2d(24, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU()
          )
        )
        (conv_3x3): ConvLayer(
          (block): Sequential(
            (conv): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), groups=48, bias=False)
            (norm): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU()
          )
        )
        (red_1x1): ConvLayer(
          (block): Sequential(
            (conv): Conv2d(48, 24, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm): BatchNorm2d(24, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
  )
  (layer_3): Sequential(
    (0): InvertedResidual(
      (block): Sequential(
        (exp_1x1): ConvLayer(
          (block): Sequential(
            (conv): Conv2d(24, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU()
          )
        )
        (conv_3x3): ConvLayer(
          (block): Sequential(
            (conv): Conv2d(48, 48, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=48, bias=False)
            (norm): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU()
          )
        )
        (red_1x1): ConvLayer(
          (block): Sequential(
            (conv): Conv2d(48, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): MobileViTBlock(
      (local_rep): Sequential(
        (conv_3x3): ConvLayer(
          (block): Sequential(
            (conv): Conv2d(48, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (norm): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU()
          )
        )
        (conv_1x1): ConvLayer(
          (block): Sequential(
            (conv): Conv2d(48, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
        )
      )
      (global_rep): Sequential(
        (0): TransformerEncoder(
          (pre_norm_mha): Sequential(
            (0): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
            (1): MultiHeadAttention(
              (qkv_proj): Linear(in_features=64, out_features=192, bias=True)
              (attn_dropout): Dropout(p=0.1, inplace=False)
              (out_proj): Linear(in_features=64, out_features=64, bias=True)
              (softmax): Softmax(dim=-1)
            )
            (2): Dropout(p=0.1, inplace=False)
          )
          (pre_norm_ffn): Sequential(
            (0): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
            (1): Linear(in_features=64, out_features=128, bias=True)
            (2): SiLU()
            (3): Dropout(p=0.0, inplace=False)
            (4): Linear(in_features=128, out_features=64, bias=True)
            (5): Dropout(p=0.1, inplace=False)
          )
        )
        (1): TransformerEncoder(
          (pre_norm_mha): Sequential(
            (0): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
            (1): MultiHeadAttention(
              (qkv_proj): Linear(in_features=64, out_features=192, bias=True)
              (attn_dropout): Dropout(p=0.1, inplace=False)
              (out_proj): Linear(in_features=64, out_features=64, bias=True)
              (softmax): Softmax(dim=-1)
            )
            (2): Dropout(p=0.1, inplace=False)
          )
          (pre_norm_ffn): Sequential(
            (0): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
            (1): Linear(in_features=64, out_features=128, bias=True)
            (2): SiLU()
            (3): Dropout(p=0.0, inplace=False)
            (4): Linear(in_features=128, out_features=64, bias=True)
            (5): Dropout(p=0.1, inplace=False)
          )
        )
        (2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
      )
      (conv_proj): ConvLayer(
        (block): Sequential(
          (conv): Conv2d(64, 48, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): SiLU()
        )
      )
      (fusion): ConvLayer(
        (block): Sequential(
          (conv): Conv2d(96, 48, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (norm): BatchNorm2d(48, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): SiLU()
        )
      )
    )
  )
  (layer_4): Sequential(
    (0): InvertedResidual(
      (block): Sequential(
        (exp_1x1): ConvLayer(
          (block): Sequential(
            (conv): Conv2d(48, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU()
          )
        )
        (conv_3x3): ConvLayer(
          (block): Sequential(
            (conv): Conv2d(96, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=96, bias=False)
            (norm): BatchNorm2d(96, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU()
          )
        )
        (red_1x1): ConvLayer(
          (block): Sequential(
            (conv): Conv2d(96, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): MobileViTBlock(
      (local_rep): Sequential(
        (conv_3x3): ConvLayer(
          (block): Sequential(
            (conv): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (norm): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU()
          )
        )
        (conv_1x1): ConvLayer(
          (block): Sequential(
            (conv): Conv2d(64, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
        )
      )
      (global_rep): Sequential(
        (0): TransformerEncoder(
          (pre_norm_mha): Sequential(
            (0): LayerNorm((80,), eps=1e-05, elementwise_affine=True)
            (1): MultiHeadAttention(
              (qkv_proj): Linear(in_features=80, out_features=240, bias=True)
              (attn_dropout): Dropout(p=0.1, inplace=False)
              (out_proj): Linear(in_features=80, out_features=80, bias=True)
              (softmax): Softmax(dim=-1)
            )
            (2): Dropout(p=0.1, inplace=False)
          )
          (pre_norm_ffn): Sequential(
            (0): LayerNorm((80,), eps=1e-05, elementwise_affine=True)
            (1): Linear(in_features=80, out_features=160, bias=True)
            (2): SiLU()
            (3): Dropout(p=0.0, inplace=False)
            (4): Linear(in_features=160, out_features=80, bias=True)
            (5): Dropout(p=0.1, inplace=False)
          )
        )
        (1): TransformerEncoder(
          (pre_norm_mha): Sequential(
            (0): LayerNorm((80,), eps=1e-05, elementwise_affine=True)
            (1): MultiHeadAttention(
              (qkv_proj): Linear(in_features=80, out_features=240, bias=True)
              (attn_dropout): Dropout(p=0.1, inplace=False)
              (out_proj): Linear(in_features=80, out_features=80, bias=True)
              (softmax): Softmax(dim=-1)
            )
            (2): Dropout(p=0.1, inplace=False)
          )
          (pre_norm_ffn): Sequential(
            (0): LayerNorm((80,), eps=1e-05, elementwise_affine=True)
            (1): Linear(in_features=80, out_features=160, bias=True)
            (2): SiLU()
            (3): Dropout(p=0.0, inplace=False)
            (4): Linear(in_features=160, out_features=80, bias=True)
            (5): Dropout(p=0.1, inplace=False)
          )
        )
        (2): TransformerEncoder(
          (pre_norm_mha): Sequential(
            (0): LayerNorm((80,), eps=1e-05, elementwise_affine=True)
            (1): MultiHeadAttention(
              (qkv_proj): Linear(in_features=80, out_features=240, bias=True)
              (attn_dropout): Dropout(p=0.1, inplace=False)
              (out_proj): Linear(in_features=80, out_features=80, bias=True)
              (softmax): Softmax(dim=-1)
            )
            (2): Dropout(p=0.1, inplace=False)
          )
          (pre_norm_ffn): Sequential(
            (0): LayerNorm((80,), eps=1e-05, elementwise_affine=True)
            (1): Linear(in_features=80, out_features=160, bias=True)
            (2): SiLU()
            (3): Dropout(p=0.0, inplace=False)
            (4): Linear(in_features=160, out_features=80, bias=True)
            (5): Dropout(p=0.1, inplace=False)
          )
        )
        (3): TransformerEncoder(
          (pre_norm_mha): Sequential(
            (0): LayerNorm((80,), eps=1e-05, elementwise_affine=True)
            (1): MultiHeadAttention(
              (qkv_proj): Linear(in_features=80, out_features=240, bias=True)
              (attn_dropout): Dropout(p=0.1, inplace=False)
              (out_proj): Linear(in_features=80, out_features=80, bias=True)
              (softmax): Softmax(dim=-1)
            )
            (2): Dropout(p=0.1, inplace=False)
          )
          (pre_norm_ffn): Sequential(
            (0): LayerNorm((80,), eps=1e-05, elementwise_affine=True)
            (1): Linear(in_features=80, out_features=160, bias=True)
            (2): SiLU()
            (3): Dropout(p=0.0, inplace=False)
            (4): Linear(in_features=160, out_features=80, bias=True)
            (5): Dropout(p=0.1, inplace=False)
          )
        )
        (4): LayerNorm((80,), eps=1e-05, elementwise_affine=True)
      )
      (conv_proj): ConvLayer(
        (block): Sequential(
          (conv): Conv2d(80, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): SiLU()
        )
      )
      (fusion): ConvLayer(
        (block): Sequential(
          (conv): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (norm): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): SiLU()
        )
      )
    )
  )
  (layer_5): Sequential(
    (0): InvertedResidual(
      (block): Sequential(
        (exp_1x1): ConvLayer(
          (block): Sequential(
            (conv): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU()
          )
        )
        (conv_3x3): ConvLayer(
          (block): Sequential(
            (conv): Conv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), groups=128, bias=False)
            (norm): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU()
          )
        )
        (red_1x1): ConvLayer(
          (block): Sequential(
            (conv): Conv2d(128, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
            (norm): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          )
        )
      )
    )
    (1): MobileViTBlock(
      (local_rep): Sequential(
        (conv_3x3): ConvLayer(
          (block): Sequential(
            (conv): Conv2d(80, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
            (norm): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
            (act): SiLU()
          )
        )
        (conv_1x1): ConvLayer(
          (block): Sequential(
            (conv): Conv2d(80, 96, kernel_size=(1, 1), stride=(1, 1), bias=False)
          )
        )
      )
      (global_rep): Sequential(
        (0): TransformerEncoder(
          (pre_norm_mha): Sequential(
            (0): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
            (1): MultiHeadAttention(
              (qkv_proj): Linear(in_features=96, out_features=288, bias=True)
              (attn_dropout): Dropout(p=0.1, inplace=False)
              (out_proj): Linear(in_features=96, out_features=96, bias=True)
              (softmax): Softmax(dim=-1)
            )
            (2): Dropout(p=0.1, inplace=False)
          )
          (pre_norm_ffn): Sequential(
            (0): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
            (1): Linear(in_features=96, out_features=192, bias=True)
            (2): SiLU()
            (3): Dropout(p=0.0, inplace=False)
            (4): Linear(in_features=192, out_features=96, bias=True)
            (5): Dropout(p=0.1, inplace=False)
          )
        )
        (1): TransformerEncoder(
          (pre_norm_mha): Sequential(
            (0): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
            (1): MultiHeadAttention(
              (qkv_proj): Linear(in_features=96, out_features=288, bias=True)
              (attn_dropout): Dropout(p=0.1, inplace=False)
              (out_proj): Linear(in_features=96, out_features=96, bias=True)
              (softmax): Softmax(dim=-1)
            )
            (2): Dropout(p=0.1, inplace=False)
          )
          (pre_norm_ffn): Sequential(
            (0): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
            (1): Linear(in_features=96, out_features=192, bias=True)
            (2): SiLU()
            (3): Dropout(p=0.0, inplace=False)
            (4): Linear(in_features=192, out_features=96, bias=True)
            (5): Dropout(p=0.1, inplace=False)
          )
        )
        (2): TransformerEncoder(
          (pre_norm_mha): Sequential(
            (0): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
            (1): MultiHeadAttention(
              (qkv_proj): Linear(in_features=96, out_features=288, bias=True)
              (attn_dropout): Dropout(p=0.1, inplace=False)
              (out_proj): Linear(in_features=96, out_features=96, bias=True)
              (softmax): Softmax(dim=-1)
            )
            (2): Dropout(p=0.1, inplace=False)
          )
          (pre_norm_ffn): Sequential(
            (0): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
            (1): Linear(in_features=96, out_features=192, bias=True)
            (2): SiLU()
            (3): Dropout(p=0.0, inplace=False)
            (4): Linear(in_features=192, out_features=96, bias=True)
            (5): Dropout(p=0.1, inplace=False)
          )
        )
        (3): LayerNorm((96,), eps=1e-05, elementwise_affine=True)
      )
      (conv_proj): ConvLayer(
        (block): Sequential(
          (conv): Conv2d(96, 80, kernel_size=(1, 1), stride=(1, 1), bias=False)
          (norm): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): SiLU()
        )
      )
      (fusion): ConvLayer(
        (block): Sequential(
          (conv): Conv2d(160, 80, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
          (norm): BatchNorm2d(80, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (act): SiLU()
        )
      )
    )
  )
  (conv_1x1_exp): ConvLayer(
    (block): Sequential(
      (conv): Conv2d(80, 320, kernel_size=(1, 1), stride=(1, 1), bias=False)
      (norm): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (act): SiLU()
    )
  )
  (classifier): Sequential(
    (global_pool): AdaptiveAvgPool2d(output_size=1)
    (flatten): Flatten(start_dim=1, end_dim=-1)
    (dropout): Dropout(p=0.1, inplace=False)
    (fc): Linear(in_features=320, out_features=2, bias=True)
  )
)